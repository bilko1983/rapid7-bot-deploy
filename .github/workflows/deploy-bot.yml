name: Deploy BotFactory Configuration
on:
  workflow_dispatch:
    inputs:
      config:
        description: 'Select configuration file'
        required: true
        default: '‚ö™Ô∏è Select a config file...'
        type: choice
        options:
          - demo-rapid7-bot
          - AdminPrivilegedCloudUserORRoles
          - CloudUserWithAPICredentialsAccessKeyAgeExceeds90Days
          - CriticalResourceRiskScoreJIRATicketCreation
          - Critical&HighInsightVulnerabilities
          - DEV-RecentlyCreatedIAMUserORRole
          - DEV-AWSGuardDutyThreatFindings
          - PROD-RecentlyCreatedIAMUserORRole
          - PROD-AWSGuardDutyThreatFindings
          - ExemptionForFalcoServiceFromPrivilegedContainersInsight
          - ExemptionForFalcoServiceFromHighRiskHostFileSystemMountsInsight
          - ExemptionForEKSInstancesWhichContainSensitiveInformationWithinInstanceUserData
          - ExemptionForEKSInstancesFromMulti-TenantAWSInsightResource
          - InstancesWithPublicSSHAccess
          - StorageContainerExposedToThePublic
jobs:
  setup-install:
    name: üß∞ Setup & üì¶ Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-restore.outputs.cache-hit }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache pip dependencies
        id: cache-restore
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('scripts/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python Dependencies
        working-directory: ./scripts
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  deploy:
    name: üöÄ Deploy BotFactory Configuration
    runs-on: ubuntu-latest
    needs: setup-install
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('scripts/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Reinstall Python Dependencies (cached)
        working-directory: ./scripts
        run: |
          python -m pip install -r requirements.txt

      - name: Deploy Selected Config
        working-directory: ./scripts
        env:
          API_KEY: ${{ secrets.INSIGHT_API_KEY }}
        run: |
          if [[ "$CONFIG_FILE" == "‚ö™Ô∏è Select a config file..." ]]; then
            echo "No configuration selected. Exiting."
            exit 1
          fi
          
          CONFIG_FILE="${{ github.event.inputs.config }}.json"
          echo "Deploying config file: $CONFIG_FILE"
          python deploy-bot.py --config "$CONFIG_FILE"
